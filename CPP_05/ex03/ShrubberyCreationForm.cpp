/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ShrubberyCreationForm.cpp                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: sihemayoub <sihemayoub@student.42.fr>      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/04/08 19:59:00 by sihemayoub        #+#    #+#             */
/*   Updated: 2023/04/08 19:59:01 by sihemayoub       ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ShrubberyCreationForm.hpp"

/*############# CONST / DEST ##############*/
/*---------- DEFAULT CONSTRUCTOR ----------*/
ShrubberyCreationForm::ShrubberyCreationForm( void ) : Form( "ShrubberyCreationForm", 145, 137 ), _garden( "Default" ) { }
/*-----------------------------------------*/

/*----------- INIT CONSTRUCTOR ------------*/
ShrubberyCreationForm::ShrubberyCreationForm( std::string const &garden ) : Form( "ShrubberyCreationForm", 145, 137 ), _garden( garden ) { }
/*-----------------------------------------*/

/*----------- COPY CONSTRUCTOR ------------*/
ShrubberyCreationForm::ShrubberyCreationForm( ShrubberyCreationForm const &src ) : Form( src ) { *this = src; }
/*-----------------------------------------*/

/*-------------- DESTRUCTOR ---------------*/
ShrubberyCreationForm::~ShrubberyCreationForm( void ) { }
/*-----------------------------------------*/
/*#########################################*/


void	ShrubberyCreationForm::execute( Bureaucrat const &executor ) const {

	std::string		file_shrubbery = this->_garden + "_shrubbery";
	std::string		shrubbery = "###########################'`################################\n###########################  V##'############################\n#########################V'  `V  ############################\n########################V'      ,############################\n#########`#############V      ,A###########################V \n########' `###########V      ,###########################V',#\n######V'   ###########l      ,####################V~~~~'',###\n#####V'    ###########l      ##P' ###########V~~'   ,A#######\n#####l      d#########l      V'  ,#######V~'       A#########\n#####l      ##########l         ,####V''         ,###########\n#####l        `V######l        ,###V'   .....;A##############\n#####A,         `######A,     ,##V' ,A#######################\n#######A,        `######A,    #V'  A########'''''##########''\n##########,,,       `####A,           `#''           '''  ,,,\n#############A,                               ,,,     ,######\n######################oooo,                 ;####, ,#########\n##################P'                   A,   ;#####V##########\n#####P'    ''''       ,###             `#,     `V############\n##P'                ,d###;              ##,       `V#########\n##########A,,   #########A              )##,    ##A,..,ooA###\n#############A, Y#########A,            )####, ,#############\n###############A ############A,        ,###### ##############\n###############################       ,#######V##############\n###############################      ,#######################\n##############################P    ,d########################\n##############################'    d#########################\n##############################     ##########################\n##############################     ##########################\n#############################P     ##########################\n#############################'     ##########################\n############################P      ##########################\n###########################P'     ;##########################\n###########################'     ,###########################\n##########################       ############################\n#########################       ,############################\n########################        d###########P'    `Y#########\n#######################        ,############        #########\n######################        ,#############        #########\n#####################        ,##############b.    ,d#########\n####################        ,################################\n###################         #################################\n##################          #######################P'  `V##P'\n#######P'     `V#           ###################P'            \n#####P'                    ,#################P'              \n###P'                      d##############P''                \n##P'                       V##############'                  \n#P'                         `V###########'                   \n#'                             `V##P'                        \n";
	std::ofstream	out(file_shrubbery);

	out << shrubbery;

	std::cout << executor.getName() << " executed " << getName() << std::endl;
}


/*############### ACCESSORS ###############*/
/*---------------- GETERS -----------------*/
std::string const	&ShrubberyCreationForm::getTarget( void ) const { return ( this->_garden ); }
/*-----------------------------------------*/

/*---------------- SETERS -----------------*/
/*-----------------------------------------*/
/*#########################################*/


/*########### OPERATORS OVERLOAD ##########*/
/*-------------- ASSIGNEMENT --------------*/
ShrubberyCreationForm	&ShrubberyCreationForm::operator=( ShrubberyCreationForm const &rhs ) {

	if (this != &rhs)
		this->_garden = rhs._garden;

	return (*this);
}
/*-----------------------------------------*/

/*--------------- STREAM OUT --------------*/
std::ostream	&operator<<( std::ostream &o, ShrubberyCreationForm const &i ) {

	o << "Shrubbery in \e[1;37" << i.getTarget() << "\e[0m." << std::endl;

	return (o);
}
/*-----------------------------------------*/
/*#########################################*/
